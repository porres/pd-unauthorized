#N canvas 430 117 807 670 10;
#X text 410 216 (invoke with <right mouse>Properties );
#X text 411 205 You can set the following properties :;
#X text 431 237 * Width : graphical x size;
#X text 431 249 * Height : graphical y size;
#X text 412 159 Probalizer output serial of integers according to the probability curve;
#X obj 100 141 probalizer 200 200 10 100 1 0 42 1 66 2 86 3 67 4 36 5 40 6 2 7 53 8 63 9 14;
#X text 431 262 * Values : number of values ( range is [ 1 \, nvalues ] );
#X msg 99 84 bang;
#X msg 99 34 bang;
#X text 425 507 but without repetitions;
#X msg 301 46 zero;
#X msg 300 70 equi;
#X text 425 482 Note = If the probabilities are all equal to 1 \,;
#X msg 299 94 reset;
#X text 344 93 Reset output;
#X text 432 276 * Max Occurrences : max number of occurences in a serial;
#X obj 104 407 probalizer 200 200 10 100 1 0 0 1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9 0;
#X obj 229 380 loadbang;
#X msg 181 380 zero;
#X text 342 394 The output of first probalizer;
#X text 342 406 is stored in the second one;
#X floatatom 193 60 5 0 0 0 - - - 0;
#X msg 193 35 bang;
#X text 312 330 End of the serial;
#X text 426 494 probalizer behaves as a random object;
#X obj 312 357 print probalizer::end;
#X text 53 36 Start;
#X text 338 72 Set equal probabilities;
#X obj 99 59 metro 10;
#X connect 5 0 16 0;
#X connect 5 1 18 0;
#X connect 5 1 25 0;
#X connect 7 0 5 0;
#X connect 8 0 28 0;
#X connect 10 0 5 0;
#X connect 11 0 5 0;
#X connect 13 0 5 0;
#X connect 17 0 18 0;
#X connect 18 0 16 0;
#X connect 21 0 5 0;
#X connect 22 0 21 0;
#X connect 28 0 7 0;
